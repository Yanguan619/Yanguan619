import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,g as i,o as n}from"./app-DwiX3Syz.js";const l={};function p(o,e){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="dbscan" tabindex="-1"><a class="header-anchor" href="#dbscan"><span>DBSCAN</span></a></h1><p>up:[[K-Means]]</p><p>DBSCAN（Density-Based Spatial Clustering of Applications with Noise）是一种基于密度的聚类方法，因此不受簇形状的约束，可以用于任意形状的聚类。<em>也可用于检测异常值</em></p><h2 id="算法步骤" tabindex="-1"><a class="header-anchor" href="#算法步骤"><span>算法步骤</span></a></h2><p>假设样本数为$m$，特征数为$p$。</p><ol><li>选择一个数据点作为起点，然后查找该点指定范围内的所有数据点。这一步可以得到 $D_{m*p}$。</li><li>若范围内的数据点数量 ≥ 指定阈值，则将这些点标为核心点，并建立一个簇（簇包含该点及其邻域内的点）。</li><li>遍历该邻域内的点，若该点为核心点，则扩大邻域；若非核心点，标记为噪声或边界点。</li><li>重复以上步骤，直到每个数据点都被归到某个簇或被标记为噪声。</li></ol><p>由此可以看出该算法需要两个输入参数：eps 和 minPoints。<em>输入参数意味着可能又需要人为调整参数得到合适的值。</em></p><hr><h2 id="算法优缺点" tabindex="-1"><a class="header-anchor" href="#算法优缺点"><span>算法优缺点</span></a></h2><p>优点</p><ul><li>可以发现任意形状的空间距离</li><li>能够处理噪声点</li><li>不需要指定簇的数目</li></ul><p>缺点</p><ul><li>需要数据分布密度均匀</li><li>需要人为设定扫描范围、最小包含数</li></ul>',13)]))}const c=t(l,[["render",p],["__file","DBSCAN（基于密度的有噪声的应用程序空间聚类法）.html.vue"]]),A=JSON.parse('{"path":"/wiki/DBSCAN%EF%BC%88%E5%9F%BA%E4%BA%8E%E5%AF%86%E5%BA%A6%E7%9A%84%E6%9C%89%E5%99%AA%E5%A3%B0%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%A9%BA%E9%97%B4%E8%81%9A%E7%B1%BB%E6%B3%95%EF%BC%89.html","title":"DBSCAN","lang":"zh-CN","frontmatter":{"date":"2022-01-23T00:00:00.000Z","abbrlink":1,"title":"DBSCAN","aliases":null,"cover":"https://scikit-learn.org.cn/upload/0a7cb28222347f6ec792f0d913390183.png","description":"DBSCAN up:[[K-Means]] DBSCAN（Density-Based Spatial Clustering of Applications with Noise）是一种基于密度的聚类方法，因此不受簇形状的约束，可以用于任意形状的聚类。也可用于检测异常值 算法步骤 假设样本数为$m$，特征数为$p$。 选择一个数据点作为起点，然后查找该点...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/wiki/DBSCAN%EF%BC%88%E5%9F%BA%E4%BA%8E%E5%AF%86%E5%BA%A6%E7%9A%84%E6%9C%89%E5%99%AA%E5%A3%B0%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%A9%BA%E9%97%B4%E8%81%9A%E7%B1%BB%E6%B3%95%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"Wiki"}],["meta",{"property":"og:title","content":"DBSCAN"}],["meta",{"property":"og:description","content":"DBSCAN up:[[K-Means]] DBSCAN（Density-Based Spatial Clustering of Applications with Noise）是一种基于密度的聚类方法，因此不受簇形状的约束，可以用于任意形状的聚类。也可用于检测异常值 算法步骤 假设样本数为$m$，特征数为$p$。 选择一个数据点作为起点，然后查找该点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://scikit-learn.org.cn/upload/0a7cb28222347f6ec792f0d913390183.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://scikit-learn.org.cn/upload/0a7cb28222347f6ec792f0d913390183.png"}],["meta",{"name":"twitter:image:alt","content":"DBSCAN"}],["meta",{"property":"article:published_time","content":"2022-01-23T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DBSCAN\\",\\"image\\":[\\"https://scikit-learn.org.cn/upload/0a7cb28222347f6ec792f0d913390183.png\\"],\\"datePublished\\":\\"2022-01-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"算法步骤","slug":"算法步骤","link":"#算法步骤","children":[]},{"level":2,"title":"算法优缺点","slug":"算法优缺点","link":"#算法优缺点","children":[]}],"readingTime":{"minutes":1.12,"words":336},"filePathRelative":"wiki/DBSCAN（基于密度的有噪声的应用程序空间聚类法）.md","localizedDate":"2022年1月23日","autoDesc":true}');export{c as comp,A as data};
